"use strict";var precacheConfig=[["/helium/index.html","3d19bc259b306fa42fbdbd20193d0ea2"],["/helium/static/css/main.ade8320b.css","465f5a430bcb91ba6112bc33af087057"],["/helium/static/media/berkeley-lab.8caa39b3.png","8caa39b38b5595097a4001c8a7007856"],["/helium/static/media/data-access-cloud.6c5b15c4.svg","6c5b15c4625c396d27df4c7846739d56"],["/helium/static/media/dcppc-dark.c7964727.svg","c796472726b4fcd5489f18b8600c38c7"],["/helium/static/media/dcppc-flow.aaec351d.png","aaec351db889ee5857c52969c296d4fb"],["/helium/static/media/dcppc.397d567b.svg","397d567b2d82e93ba637e72011ae9de4"],["/helium/static/media/github.b0af0379.svg","b0af0379e9567d1559a9d90901b89439"],["/helium/static/media/illustration01.135e6263.svg","135e6263d0586ae19a2a227a9b774aab"],["/helium/static/media/illustration02.76069405.svg","76069405775cc82fcc524efca2953f1c"],["/helium/static/media/illustration03.5a1e7f75.svg","5a1e7f7542e7327249cd8ae262e0129e"],["/helium/static/media/jackson-lab.46bf2ab8.png","46bf2ab89356d6e2f301c8c04cdd507e"],["/helium/static/media/maastricht-univ.0c6a7ec8.png","0c6a7ec8f0b66d11efc4069acec1ad0c"],["/helium/static/media/oregon-state-univ.5683c71d.png","5683c71d6e6cd86629b187bc8db783ca"],["/helium/static/media/renci.0862929d.png","0862929d907e85fe10c104b674b84839"],["/helium/static/media/researcher.51fbaced.svg","51fbaced0935c51b543856ff1e532e86"],["/helium/static/media/rti-international.d6b143e5.svg","d6b143e56e11e51018ad03a22852015e"],["/helium/static/media/univ-new-mexico.806aed21.jpeg","806aed21856e9a468cc892de1b1c94a1"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/helium/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});